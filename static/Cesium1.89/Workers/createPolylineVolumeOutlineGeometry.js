define(["./when-4bbc8319","./Matrix2-a3269947","./arrayRemoveDuplicates-18786327","./BoundingRectangle-2fb5dccf","./Transforms-53e3607a","./ComponentDatatype-93750d1a","./PolylineVolumeGeometryLibrary-3ac360a7","./RuntimeError-346a3079","./GeometryAttribute-f4cf259b","./GeometryAttributes-7827a6c2","./IndexDatatype-b7d979a6","./PolygonPipeline-db447550","./combine-83860057","./WebGLConstants-1c8239cc","./EllipsoidTangentPlane-e4b49c0e","./AxisAlignedBoundingBox-7ee4a240","./IntersectionTests-e90cbdec","./Plane-4d8d92e1","./PolylinePipeline-572b1866","./EllipsoidGeodesic-aa7c9d72","./EllipsoidRhumbLine-d2c20afd"],(function(e,i,n,t,a,r,o,l,s,p,d,c,u,y,g,h,m,f,v,E,P){"use strict";function _(n){var t=(n=e.defaultValue(n,e.defaultValue.EMPTY_OBJECT)).polylinePositions,a=n.shapePositions;this._positions=t,this._shape=a,this._ellipsoid=i.Ellipsoid.clone(e.defaultValue(n.ellipsoid,i.Ellipsoid.WGS84)),this._cornerType=e.defaultValue(n.cornerType,o.CornerType.ROUNDED),this._granularity=e.defaultValue(n.granularity,r.CesiumMath.RADIANS_PER_DEGREE),this._workerName="createPolylineVolumeOutlineGeometry";var l=1+t.length*i.Cartesian3.packedLength;l+=1+a.length*i.Cartesian2.packedLength,this.packedLength=l+i.Ellipsoid.packedLength+2}_.pack=function(n,t,a){var r;a=e.defaultValue(a,0);var o=n._positions,l=o.length;for(t[a++]=l,r=0;r<l;++r,a+=i.Cartesian3.packedLength)i.Cartesian3.pack(o[r],t,a);var s=n._shape;for(l=s.length,t[a++]=l,r=0;r<l;++r,a+=i.Cartesian2.packedLength)i.Cartesian2.pack(s[r],t,a);return i.Ellipsoid.pack(n._ellipsoid,t,a),a+=i.Ellipsoid.packedLength,t[a++]=n._cornerType,t[a]=n._granularity,t};var b=i.Ellipsoid.clone(i.Ellipsoid.UNIT_SPHERE),k={polylinePositions:void 0,shapePositions:void 0,ellipsoid:b,height:void 0,cornerType:void 0,granularity:void 0};_.unpack=function(n,t,a){var r;t=e.defaultValue(t,0);var o=n[t++],l=new Array(o);for(r=0;r<o;++r,t+=i.Cartesian3.packedLength)l[r]=i.Cartesian3.unpack(n,t);o=n[t++];var s=new Array(o);for(r=0;r<o;++r,t+=i.Cartesian2.packedLength)s[r]=i.Cartesian2.unpack(n,t);var p=i.Ellipsoid.unpack(n,t,b);t+=i.Ellipsoid.packedLength;var d=n[t++],c=n[t];return e.defined(a)?(a._positions=l,a._shape=s,a._ellipsoid=i.Ellipsoid.clone(p,a._ellipsoid),a._cornerType=d,a._granularity=c,a):(k.polylinePositions=l,k.shapePositions=s,k.cornerType=d,k.granularity=c,new _(k))};var C=new t.BoundingRectangle;return _.createGeometry=function(e){var l=e._positions,u=n.arrayRemoveDuplicates(l,i.Cartesian3.equalsEpsilon),y=e._shape;if(y=o.PolylineVolumeGeometryLibrary.removeDuplicatesFromShape(y),!(u.length<2||y.length<3)){c.PolygonPipeline.computeWindingOrder2D(y)===c.WindingOrder.CLOCKWISE&&y.reverse();var g=t.BoundingRectangle.fromPoints(y,C);return function(e,i){var n=new p.GeometryAttributes;n.position=new s.GeometryAttribute({componentDatatype:r.ComponentDatatype.DOUBLE,componentsPerAttribute:3,values:e});var t,o,l=i.length,c=n.position.values.length/3,u=e.length/3/l,y=d.IndexDatatype.createTypedArray(c,2*l*(u+1)),g=0,h=(t=0)*l;for(o=0;o<l-1;o++)y[g++]=o+h,y[g++]=o+h+1;for(y[g++]=l-1+h,y[g++]=h,h=(t=u-1)*l,o=0;o<l-1;o++)y[g++]=o+h,y[g++]=o+h+1;for(y[g++]=l-1+h,y[g++]=h,t=0;t<u-1;t++){var m=l*t,f=m+l;for(o=0;o<l;o++)y[g++]=o+m,y[g++]=o+f}return new s.Geometry({attributes:n,indices:d.IndexDatatype.createTypedArray(c,y),boundingSphere:a.BoundingSphere.fromVertices(e),primitiveType:s.PrimitiveType.LINES})}(o.PolylineVolumeGeometryLibrary.computePositions(u,y,g,e,!1),y)}},function(n,t){return e.defined(t)&&(n=_.unpack(n,t)),n._ellipsoid=i.Ellipsoid.clone(n._ellipsoid),_.createGeometry(n)}}));
